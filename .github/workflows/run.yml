name: Generate routing rules for Surge
on:
  workflow_dispatch:
  schedule:
    - cron: '0 23 * * *'
  push:
    branches:
      - master
    paths-ignore:
      - "**/README.md"
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "category_porn=https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/category-porn" >> $GITHUB_ENV
          echo "emby_plus=https://raw.githubusercontent.com/ddgksf2013/Filter/master/Emby.list" >> $GITHUB_ENV
        shell: bash
        
      - name: Checkout the default branch
        uses: actions/checkout@v4

      - name: Make directory
        run: |
          mkdir -p Domainset
          mkdir -p Ruleset
          mkdir -p dist

      - name: Generate category-porn.txt file
        run: |
          # Write header information
          echo -e "# Generated on $(date)\n" > Ruleset/category-porn.list
          echo -e "# Generated from https://github.com/v2fly/domain-list-community/tree/master/data/category-porn" >> Ruleset/category-porn.list
          
          # echo -e "# Generated from https://rules.kr328.app/category-porn.yaml\n" >> Ruleset/category-porn.list

          echo "" >> "Ruleset/category-porn.list"

          # Adjusted Step 1: Process lines starting with 'include:'
          curl -sSL ${category_porn} | perl -ne 'print "DOMAIN-KEYWORD,$1\n" if /^include:(.*)/' >> Ruleset/category-porn.list

          # Adjusted Step 2: Process domain names without 'regexp:', 'include:', 'full:', not starting with '#', and containing a dot.
          curl -sSL ${category_porn} | perl -ne 'print "DOMAIN-SUFFIX,$1\n" if !/regexp:/ && !/include:/ && !/full:/ && !/^#/ && /\./ && /(\S+)/' >> Ruleset/category-porn.list

          # Step 3: Process lines starting with 'full:'
          # (No changes here, as it's not applicable based on your provided content)
          curl -sSL ${category_porn} | perl -ne 'print "DOMAIN,$1\n" if /^full:(.*)/' >> Ruleset/category-porn.list
      
      - name: Generate emby.list file
        run: |
          # 下载原始规则数据
          curl -sSL "${emby_plus}" -o original_rules.list
        
          # 计算规则数量
          rules_count=$(grep -cE "^(DOMAIN-SUFFIX|DOMAIN|IP-CIDR)," original_rules.list)
        
          # 写入文件头
          echo -e "# Generated on $(date)" > Ruleset/emby.list
          echo "# Generated from ${emby_plus}" >> Ruleset/emby.list
          echo -e "# Total Rules: $rules_count\n" >> Ruleset/emby.list
        
          # 将处理后的数据写入 emby.list
          grep -E "^(DOMAIN-SUFFIX|DOMAIN|IP-CIDR)," original_rules.list >> Ruleset/emby.list


      - name: Move files to publish directory
        run: |
          mkdir -p publish
          mv Ruleset ./publish/
          mv Domainset ./publish/
          
      - name: Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          files: |
            ./publish/*
        env:
          GITHUB_TOKEN: ${{ secrets.FORACT }}

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-action[bot]"
          git config --local user.email "126152485+anyawa@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.FORACT }}@github.com/${{ github.repository }}"
          git push -f -u origin release

      - name: Purge jsdelivr CDN
        run: |
          cd publish || exit 1
          for file in $(ls Domainset); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/Domainset/${file}"
          done
          for file in $(ls Ruleset); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release@release/Ruleset/${file}"
            done
